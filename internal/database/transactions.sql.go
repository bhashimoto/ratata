// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: transactions.sql

package database

import (
	"context"
)

const createTransaction = `-- name: CreateTransaction :one
INSERT INTO transactions (created_at, modified_at, description, amount, paid_by)
VALUES (?, ?, ?, ?, ?)
RETURNING id, created_at, modified_at, description, amount, paid_by
`

type CreateTransactionParams struct {
	CreatedAt   int64   `json:"created_at"`
	ModifiedAt  int64   `json:"modified_at"`
	Description string  `json:"description"`
	Amount      float64 `json:"amount"`
	PaidBy      int64   `json:"paid_by"`
}

func (q *Queries) CreateTransaction(ctx context.Context, arg CreateTransactionParams) (Transaction, error) {
	row := q.db.QueryRowContext(ctx, createTransaction,
		arg.CreatedAt,
		arg.ModifiedAt,
		arg.Description,
		arg.Amount,
		arg.PaidBy,
	)
	var i Transaction
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.ModifiedAt,
		&i.Description,
		&i.Amount,
		&i.PaidBy,
	)
	return i, err
}
